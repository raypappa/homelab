---
name: Ansible Scheduled
on: # yamllint disable-line rule:truthy
  workflow_call:
  workflow_dispatch:
  schedule:
    - cron: "15 4 * * 2" # weekly on tuesday 4:15am
jobs:
  ansible:
    runs-on: ${{ vars.RUNS_ON }}
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read # apparently setting permissions is holistic rather than additive.
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ASSUME_ROLE_ARN }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}
      - name: arduino/setup-task
        uses: arduino/setup-task@v2.0.0
        with:
          version: ${{ vars.TASK_VERSION}}
      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          version: "0.9.2"
      - name: Install 1Password CLI
        uses: 1password/install-cli-action@v2
      - run: task configure
      - name: Create extra vars file
        run: echo "${{ secrets.ANSIBLE_EXTRA_VAR_JSON }}" |base64 -d > ansible/ansible_extra_vars.json
      - name: Validate extra vars
        run: wc ansible/ansible_extra_vars.json && jq . ansible/ansible_extra_vars.json
          >/dev/null 2>&1
      - name: Setup kubectl
        run: |
          install -m 600 -D /dev/null ~/.kube/config
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
          stat ~/.kube/config
      - name: Setup SSH
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_ed25519
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          printf "Host *\n  StrictHostKeyChecking no\n  UserKnownHostsFile /dev/null\n" > ~/.ssh/config
      - name: SSH Test
        run: ssh ${{ vars.BASTION_USER }}@${{ vars.BASTION_HOST }} -p ${{ vars.BASTION_PORT
          }} echo "SSH Test"
      - uses: stoneydavis/ssh-port-forward-action@v1.0.1
        with:
          ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
          ssh_host: ${{ vars.BASTION_HOST }}
          ssh_port: ${{ vars.BASTION_PORT }}
          ssh_user: ${{ vars.BASTION_USER }}
          local_port: 6443
          remote_host: localhost
          remote_port: 6443
      - name: Kubernetes Test
        run: kubectl api-resources
      - name: Ansible Canary
        run: task ansible:deploy:canary:ci
        env:
          BASTION_HOST: ${{ vars.BASTION_HOST }}
          BASTION_PORT: ${{ vars.BASTION_PORT }}
          BASTION_USER: ${{ vars.BASTION_USER }}
      # If package dependencies are not installed, the following task will fail. So we run in prod :D
      # - name: Ansible Diff
      #   run: task ansible:diff:ci
      #   env:
      #     BASTION_HOST: ${{ vars.BASTION_HOST}}
      #     BASTION_PORT: ${{ vars.BASTION_PORT}}
      #     AWS_REGION: ${{ vars.AWS_REGION}}
      #     AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION}}
      - name: Ansible Deploy
        run: echo $AWS_REGION;task ansible:deploy:ci
        env:
          BASTION_HOST: ${{ vars.BASTION_HOST}}
          BASTION_USER: ${{ vars.BASTION_USER }}
          BASTION_PORT: ${{ vars.BASTION_PORT}}
          AWS_REGION: ${{ vars.AWS_REGION}}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION}}
        if: github.ref == 'refs/heads/main'
