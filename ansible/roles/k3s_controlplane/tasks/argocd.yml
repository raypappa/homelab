---
# yaml-language-server: $schema=https://raw.githubusercontent.com/ansible/ansible-lint/main/src/ansiblelint/schemas/ansible.json#/$defs/tasks
- name: argocd | Wait for k3s to stabilize
  ansible.builtin.wait_for:
    port: 6443
    delay: 10
    timeout: 300
    state: started
- name: Create ArgoCD namespace
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: argocd
        labels:
          name: argocd
          pod-security.kubernetes.io/audit: baseline
          pod-security.kubernetes.io/enforce: baseline
          pod-security.kubernetes.io/warn: baseline
- name: argocd | Apply default Network Policies for argocd namespace
  ansible.builtin.template:
    src: "netpols.yaml.j2"
    dest: /var/lib/rancher/k3s/server/manifests/argocd-netpols.yaml
    owner: root
    group: root
    mode: '0600'
  vars:
    namespace: argocd
# Apply argoCD deployment manifest same as what ArgoCD itself is manged with, this eliminates changes during Ansible deploys.
- name: argocd | Apply ArgoCD Kustomize # this is not the right way to do it but using kubernetes.core.k8s was failing for some reason.
  ansible.builtin.shell:
    cmd: >-
      set -o pipefail &&
      k3s kubectl kustomize
      --enable-helm=True https://github.com/raypappa/homelab.git/kubernetes/{{ git_sub_path
      }}/bootstrap/argocd |
      k3s kubectl apply -f -
    executable: /bin/bash
  changed_when: true
- name: argocd | Wait for ArgoCD to be ready
  become: false
  retries: 10
  until: argocd_server_check is not failed
  delay: 5
  register: argocd_server_check
  kubernetes.core.k8s_info:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    host: https://localhost:6443
    label_selectors:
      - name = argocd-repo-server
    kind: pod
    namespace: argocd
- name: argocd | Slurp ssh key
  slurp:
    src: ~/.ssh/id_ed25519
  register: k3s_controlplane_ssh_key
# Note: This makes argocd able to use the above ssh key, but the ssh key still needs to be added by hand as a deploy key to the github repo.
- name: argocd | Configure ArgoCD with SSH Key
  kubernetes.core.k8s:
    kubeconfig: /etc/rancher/k3s/k3s.yaml
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: argocd-git-{{ k3s_git_secret_name }}
        namespace: argocd
        labels:
          argocd.argoproj.io/secret-type: repository
      stringData:
        type: git
        url: "{{ k3s_git_repo }}"
        sshPrivateKey: "{{ k3s_controlplane_ssh_key['content'] | b64decode }}"
