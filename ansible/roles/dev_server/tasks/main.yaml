---
- name: Clone dotfiles
  ansible.builtin.git:
    dest: $HOME/.cfg
    repo: https://github.com/raypappa/dotfiles.git
    bare: true
    update: true
- name: Checkout dotfiles
  ansible.builtin.command: # noqa: command-instead-of-module
    cmd: git --git-dir=$HOME/.cfg/ --work-tree=$HOME checkout main --force
  args:
    creates: $HOME/.zshrc
- name: Ensure dotfile repo is up to date
  ansible.builtin.command: # noqa: no-changed-when command-instead-of-module
    cmd: git --git-dir=$HOME/.cfg/ --work-tree=$HOME pull --force
- name: Ensure .ssh dir
  ansible.builtin.file:
    path: $HOME/.ssh
    state: directory
    mode: "0700"
- name: authorized_keys
  ansible.builtin.copy:
    src: authorized_keys
    dest: $HOME/.ssh/authorized_keys
    mode: "0600"
- name: Install bash-it
  ansible.builtin.git:
    dest: $HOME/.bash_it
    repo: https://github.com/Bash-it/bash-it.git
    update: true
- name: tmux completions
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/imomaliev/tmux-bash-completion/master/completions/tmux
    dest: $HOME/.local/share/bash-completion/tmux.bash
    mode: "0755"
- name: Alacritty completions
  ansible.builtin.get_url:
    url: https://github.com/alacritty/alacritty/releases/latest/download/alacritty.bash
    dest: $HOME/.local/share/bash-completion/alacritty.bash
    mode: "0755"
  tags:
    - alacritty
- name: Install Alacritty terminfo
  ansible.builtin.command: >
    curl -L -s https://github.com/alacritty/alacritty/releases/latest/download/alacritty.info | sudo tic -xe alacritty,alacritty-direct -

  tags:
    - alacritty
- name: Architecture mapping
  ansible.builtin.set_fact:
    dev_server_ansible_architecture: "amd64"
  when: ansible_architecture == "x86_64"
  tags:
    - always
- name: Install OS Specific packages
  ansible.builtin.include_tasks: "{{ansible_os_family|lower}}.yaml"
- name: WSL
  when: '"microsoft" in ansible_facts["kernel"]'
  ansible.builtin.include_tasks: wsl.yaml
- name: Install nvm
  ansible.builtin.git:
    repo: https://github.com/nvm-sh/nvm.git
    dest: $HOME/.nvm
  tags: nvm
- name: Install lazydocker
  tags:
    - lazydocker
  block:
    - name: "Find latest lazydocker version"
      ansible.builtin.uri:
        url: https://github.com/jesseduffield/lazydocker/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: lazydocker_latest
    - name: "Extract lazydocker"
      ansible.builtin.unarchive:
        src: https://github.com/jesseduffield/lazydocker/releases/download/{{lazydocker_latest.json.tag_name}}/lazydocker_{{lazydocker_latest.json.tag_name|replace('v', '')}}_{{ansible_system}}_{{ansible_architecture}}.tar.gz
        dest: $HOME/.local/bin
        include:
          - lazydocker
        keep_newer: true
        remote_src: true
        mode: "0755"
- name: "Download tflint"
  tags:
    - tflint
  ansible.builtin.unarchive:
    src: https://github.com/terraform-linters/tflint/releases/latest/download//tflint_{{ansible_system|lower}}_{{dev_server_ansible_architecture}}.zip
    include:
      - tflint
    dest: $HOME/.local/bin
    mode: "0755"
    keep_newer: true
    remote_src: true
- name: Install tfenv
  tags:
    - tfenv
  ansible.builtin.git:
    repo: https://github.com/tfutils/tfenv.git
    depth: 1
    dest: $HOME/.tfenv
    update: true
- name: Install terraform-docs
  tags:
    - terraform-docs
  block:
    - name: "Find latest terraform-docs version"
      ansible.builtin.uri:
        url: https://github.com/terraform-docs/terraform-docs/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: terraform_docs_latest
    - name: "Download terraform-docs"
      ansible.builtin.unarchive:
        src: https://github.com/terraform-docs/terraform-docs/releases/download/{{terraform_docs_latest.json.tag_name}}/terraform-docs-{{terraform_docs_latest.json.tag_name}}-{{ansible_system|lower}}-{{dev_server_ansible_architecture}}.tar.gz
        dest: $HOME/.local/bin
        keep_newer: true
        include:
          - terraform-docs
        remote_src: true
- name: Install pyenv
  tags:
    - pyenv
  ansible.builtin.git:
    repo: https://github.com/pyenv/pyenv.git
    dest: $HOME/.pyenv
    force: true
    update: true
- name: Install pyenv-virtualenv
  tags:
    - pyenv-virtualenv
  ansible.builtin.git:
    repo: https://github.com/pyenv/pyenv-virtualenv.git
    dest: $HOME/.pyenv/plugins/pyenv-virtualenv
    update: true
- name: Install glow
  tags:
    - glow
  block:
    - name: "Find latest glow version"
      ansible.builtin.uri:
        url: https://github.com/charmbracelet/glow/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: glow_latest
    - name: "Download glow"
      ansible.builtin.unarchive:
        src: https://github.com/charmbracelet/glow/releases/download/{{glow_latest.json.tag_name}}/glow_{{glow_latest.json.tag_name|replace('v', '')}}_{{ansible_system}}_{{ansible_architecture}}.tar.gz
        dest: $HOME/.local/bin
        extra_opts:
          - --strip-components=1
        include: glow_{{glow_latest.json.tag_name|replace('v', '')}}_{{ansible_system}}_{{ansible_architecture}}/glow
        keep_newer: true
        remote_src: true
- name: Install vale
  tags:
    - vale
  block:
    - name: "Find latest vale version"
      ansible.builtin.uri:
        url: https://github.com/errata-ai/vale/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: vale_latest
    - name: "Download vale"
      ansible.builtin.unarchive:
        src: https://github.com/errata-ai/vale/releases/download/{{vale_latest.json.tag_name}}/vale_{{vale_latest.json.tag_name|replace('v', '')}}_{{ansible_system}}_64-bit.tar.gz
        dest: $HOME/.local/bin
        include:
          - vale
        keep_newer: true
        remote_src: true
        mode: "0755"
- name: Install aws cli
  tags:
    - aws-cli
  block:
    - name: Create tmp dir
      ansible.builtin.tempfile:
        state: directory
      register: aws_cli_tmp_dir
    # https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
    - name: Download awscli v2 installer.
      ansible.builtin.unarchive:
        src: "https://awscli.amazonaws.com/awscli-exe-linux-{{ ansible_architecture }}.zip"
        dest: "{{aws_cli_tmp_dir.path}}"
        remote_src: true
        creates: "{{aws_cli_tmp_dir.path}}/aws/install"
        mode: "0755"
    - name: Run the installer
      command:
      args:
        cmd: "{{aws_cli_tmp_dir.path}}/aws/install --bin-dir $HOME/.local/bin --install-dir $HOME/.local/opt/aws-cli"
        creates: $HOME/.local/bin/aws
- name: Install aws sam CLI
  tags:
    - aws-sam-cli
  block:
    - name: Find latest version
      ansible.builtin.uri:
        url: https://github.com/aws/aws-sam-cli/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: sam_latest
    - name: Create tmp dir
      ansible.builtin.tempfile:
        state: directory
      register: aws_sam_cli_tmp_dir
    - name: Download
      ansible.builtin.unarchive:
        src: "https://github.com/aws/aws-sam-cli/releases/download/{{sam_latest.json.tag_name}}/aws-sam-cli-linux-{{ansible_architecture}}.zip"
        dest: "{{aws_sam_cli_tmp_dir.path}}"
        remote_src: true
        creates: "{{aws_sam_cli_tmp_dir.path}}/install"
    - name: Install
      ansible.builtin.command:
        cmd: "{{aws_sam_cli_tmp_dir.path}}/install --bin-dir $HOME/.local/bin --install-dir $HOME/.local/opt/aws-sam-cli"
        creates: $HOME/.local/bin/sam
- name: Install aws-vault
  tags:
    - aws-vault
  ansible.builtin.get_url:
    url: https://github.com/99designs/aws-vault/releases/latest/download/aws-vault-{{ansible_system|lower}}-{{dev_server_ansible_architecture}}
    dest: $HOME/.local/bin/aws-vault
    mode: "0755"
- name: Install kubectl
  tags:
    - kubectl
  block:
    - name: Find latest version
      ansible.builtin.uri:
        url: https://dl.k8s.io/release/stable.txt
        status_code: 200
        return_content: true
      register: kubectl_latest
    - name: Download kubectl
      ansible.builtin.get_url:
        url: https://dl.k8s.io/release/{{kubectl_latest.content}}/bin/{{ansible_system|lower}}/{{dev_server_ansible_architecture}}/kubectl
        dest: $HOME/.local/bin/kubectl
        mode: "0755"
- name: Install fzf
  tags:
    - fzf
  block:
    - name: Find latest version
      ansible.builtin.uri:
        url: https://github.com/junegunn/fzf/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: fzf_latest
    - name: Download fzf
      ansible.builtin.unarchive:
        src: https://github.com/junegunn/fzf/releases/download/{{fzf_latest.json.tag_name}}/fzf-{{fzf_latest.json.tag_name|replace('v', '')}}-{{ansible_system}}_{{dev_server_ansible_architecture}}.tar.gz
        dest: $HOME/.local/bin
        include:
          - fzf
        keep_newer: true
        remote_src: true
        mode: "0755"
- name: Install neovim
  tags:
    - neovim
  block:
    - name: Create temp directory for neovim
      ansible.builtin.file:
        path: $HOME/.local/nvim
        state: directory
    - name: Download neovim
      ansible.builtin.unarchive:
        src: https://github.com/neovim/neovim/releases/latest/download/nvim-{{ansible_system|lower}}64.tar.gz
        remote_src: true
        keep_newer: true
        mode: "0755"
        dest: $HOME/.local/nvim
        extra_opts:
          - --strip-components=1
    - name: Symlink nvim
      ansible.builtin.file:
        src: $HOME/.local/nvim/bin/nvim
        dest: $HOME/.local/bin/nvim
        state: link
- name: Install ripgrep
  tags:
    - ripgrep
  block:
    - name: Find latest version of ripgrep
      ansible.builtin.uri:
        url: https://github.com/BurntSushi/ripgrep/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: ripgrep_latest
    - name: Install ripgrep
      ansible.builtin.unarchive:
        src: https://github.com/BurntSushi/ripgrep/releases/download/{{ripgrep_latest.json.tag_name}}/ripgrep-{{ripgrep_latest.json.tag_name}}-{{ansible_architecture}}-unknown-{{ansible_system|lower}}-musl.tar.gz
        dest: $HOME/.local/bin
        include:
          - ripgrep-{{ripgrep_latest.json.tag_name}}-{{ansible_architecture}}-unknown-{{ansible_system|lower}}-musl/rg
        keep_newer: true
        remote_src: true
        mode: "0755"
        extra_opts:
          - --strip-components=1
        creates: $HOME/.local/bin/rg
- name: Install fd
  tags:
    - fd
  block:
    - name: Find latest version of fd
      ansible.builtin.uri:
        url: https://github.com/sharkdp/fd/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: fd_latest
    - name: Install fd
      ansible.builtin.unarchive:
        src: https://github.com/sharkdp/fd/releases/download/{{fd_latest.json.tag_name}}/fd-{{fd_latest.json.tag_name}}-{{ansible_architecture}}-unknown-{{ansible_system|lower}}-gnu.tar.gz
        dest: $HOME/.local/bin
        include:
          - fd-{{fd_latest.json.tag_name}}-{{ansible_architecture}}-unknown-{{ansible_system|lower}}-gnu/fd
        keep_newer: true
        remote_src: true
        mode: "0755"
        extra_opts:
          - --strip-components=1
        creates: $HOME/.local/bin/fd
- name: Install tree-sitter
  tags:
    - tree-sitter
  block:
    - name: Create Temp Directory for tree-sitter
      ansible.builtin.tempfile:
        state: directory
      register: tree_sitter_tmp_dir
    - name: Download tree-sitter
      ansible.builtin.get_url:
        url: https://github.com/tree-sitter/tree-sitter/releases/latest/download/tree-sitter-{{ansible_system}}-x64.gz
        dest: "{{tree_sitter_tmp_dir.path}}/tree-sitter.gz"
    - name: Install tree-sitter
      community.general.decompress:
        src: "{{tree_sitter_tmp_dir.path}}/tree-sitter.gz"
        dest: $HOME/.local/bin/tree-sitter
        mode: "0755"
        format: gz
- name: Install pnpm
  tags:
    - pnpm
  ansible.builtin.get_url:
    url: https://github.com/pnpm/pnpm/releases/latest/download/pnpm-{{ansible_system|lower}}-x64
    dest: $HOME/.local/bin/pnpm
- name: Install goenv
  tags:
    - goenv
  ansible.builtin.git:
    repo: https://github.com/go-nv/goenv.git
    dest: $HOME/.goenv
    update: true
- name: Install rbenv
  tags:
    - rbenv
  ansible.builtin.git:
    repo: https://github.com/rbenv/rbenv.git
    dest: $HOME/.rbenv
    update: true
- name: Install Github CLI
  tags:
    - gh
  block:
    - name: Find latest version
      ansible.builtin.uri:
        url: https://github.com/cli/cli/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: gh_latest
    - name: Download
      ansible.builtin.unarchive:
        src: https://github.com/cli/cli/releases/download/{{gh_latest.json.tag_name}}/gh_{{gh_latest.json.tag_name|replace('v', '')}}_{{ansible_system|lower}}_{{dev_server_ansible_architecture}}.tar.gz
        dest: $HOME/.local/
        include:
          - gh_{{gh_latest.json.tag_name|replace('v', '')}}_{{ansible_system|lower}}_{{dev_server_ansible_architecture}}/bin/gh
        keep_newer: true
        extra_opts:
          - --strip-components=1
        remote_src: true
        mode: "0755"
- name: Install spaceship
  tags:
    - spaceship
  block:
    - name: Create .zsh directory
      ansible.builtin.file:
        path: $HOME/.zsh
        state: directory
    - name: Clone spaceship
      ansible.builtin.git:
        repo: https://github.com/spaceship-prompt/spaceship-prompt.git
        depth: 1
        dest: "$HOME/.zsh/spaceship"
- name: Install taskfile
  tags:
    - taskfile
  block:
    - name: Create temp directory for taskfile
      ansible.builtin.tempfile:
        state: directory
      register: taskfile_tmp_dir
    - name: Download taskfile
      ansible.builtin.unarchive:
        src: https://github.com/go-task/task/releases/latest/download/task_{{ansible_system|lower}}_{{dev_server_ansible_architecture}}.tar.gz
        dest: "{{taskfile_tmp_dir.path}}"
        mode: "0755"
        keep_newer: true
        remote_src: true
    - name: Install taskfile bin
      ansible.builtin.copy:
        src: "{{taskfile_tmp_dir.path}}/task"
        dest: $HOME/.local/bin/task
        mode: "0755"
    - name: Install taskfile bash completion
      ansible.builtin.copy:
        src: "{{taskfile_tmp_dir.path}}/completion/bash/task.bash"
        dest: $HOME/.local/share/bash-completion/task.bash
        mode: "0755"
        # I don't know where zsh completion is supposed to go
        # - name: Install zsh completion
        #   ansible.builtin.copy:
        #     src: "{{taskfile_tmp_dir.path}}/completion/zsh/_task"
        #     dest: $HOME/.local/share/zsh/site-functions/_task
        #     mode: "0755"
- name: git-plugins
  tags:
    - git-plugins
  ansible.builtin.git:
    repo: https://github.com/afeld/git-plugins.git
    dest: $HOME/.git-plugins
    update: true
- name: git-checkout-branch
  tags:
    - git-checkout-branch
  ansible.builtin.get_url:
    url: https://github.com/royeo/git-checkout-branch/releases/latest/download/git-checkout-branch-{{ansible_system}}-{{ansible_architecture}}
    dest: $HOME/.local/bin/git-checkout-branch
    mode: "0755"
- name: Install k9s
  tags:
    - k9s
  ansible.builtin.unarchive:
    src: https://github.com/derailed/k9s/releases/latest/download/k9s_{{ansible_system}}_{{dev_server_ansible_architecture}}.tar.gz
    dest: $HOME/.local/bin
    include:
      - k9s
    keep_newer: true
    remote_src: true
    mode: "0755"
- name: Determine latest version of python
  tags:
    - python
  ansible.builtin.shell: pyenv latest -k 3
  register: latest_python
- name: Install latest version of python
  tags:
    - python
  ansible.builtin.shell: pyenv install -s {{latest_python.stdout}}
- name: Install pip modules
  tags:
    - pip
    - python
  ansible.builtin.pip:
    name:
      - pipx
- name: Install nvshim via pipx
  tags:
    - nvshim
  community.general.pipx:
    executable: $HOME/.pyenv/versions/{{latest_python.stdout}}/bin/pipx
    global: false
    name: nvshim
    source: git+https://github.com/iamogbz/nvshim.git
    state: latest
    python: "{{latest_python.stdout}}"
- name: Setup nvm
  tags:
    - nvm
  ansible.builtin.shell: nvm install --lts --latest-npm -b --no-progress --default
- name: Install npm modules
  tags:
    - npm
  loop:
    - jsonlint
    - yaml-language-server
    - cspell
    - aws-azure-login
  community.general.npm:
    global: true
    name: "{{ item }}"
- name: Symlink to global
  tags:
    - npm
  ansible.builtin.file:
    src: $NVM_BIN/{{item}}
    dest: $HOME/.local/bin/{{ item }}
    state: link
  loop:
    - jsonlint
    - yaml-language-server
    - cspell
    - aws-azure-login
- name: Install Rust
  block:
    - name: Check if rustup has been installed
      ansible.builtin.stat:
        path: "{{ rustup_bin }}"
      register: rustup_st
    - name: Create temporary directory
      ansible.builtin.tempfile:
        state: directory
        suffix: rustup
      register: rustup_tmp
    - name: Download rustup-init script
      ansible.builtin.get_url:
        dest: "{{ rustup_tmp.path }}/rustup-init.sh"
        url: https://sh.rustup.rs
    - name: Run rustup-init script
      ansible.builtin.command: "sh {{ rustup_tmp.path }}/rustup-init.sh -y --no-modify-path"
      changed_when: true
      when: not rustup_st.stat.exists
- name: Install kustomize
  tags:
    - kustomize
  block:
    - name: Find latest version of kustomize
      ansible.builtin.uri:
        url: https://github.com/kubernetes-sigs/kustomize/releases/latest
        headers:
          Accept: application/json
        status_code: 200
      register: kustomize_latest
    - name: Install kustomize
      ansible.builtin.unarchive:
        src: https://github.com/kubernetes-sigs/kustomize/releases/download/{{ kustomize_latest.json.tag_name }}/kustomize_{{ 1 | extract(kustomize_latest.json.tag_name | split('/')) }}_{{ ansible_system | lower }}_{{ dev_server_ansible_architecture }}.tar.gz
        dest: $HOME/.local/bin
        mode: "0755"
        keep_newer: true
        remote_src: true
- name: Install cloudflared
  tags:
    - cloudflared
  ansible.builtin.get_url:
    url: https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-{{ dev_server_ansible_architecture }}
    dest: $HOME/.local/bin/cloudflared
    mode: "0755"
